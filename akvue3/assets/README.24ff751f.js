var s=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable,p=(a,l,n)=>l in a?s(a,l,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[l]=n;import{r,a as c,o,c as d,w as h,b as u,F as i,f as m,d as j,y as v,A as g,t as f,M as _}from"./vendor.19f0dac7.js";const k={setup:()=>({value:r("")})};k.render=function(s,a,l,n,t,e){const p=c("ak-input"),r=c("ak-form-item");return o(),d(r,{label:"title"},{default:h((()=>[u(p,{modelValue:n.value,"onUpdate:modelValue":a[1]||(a[1]=s=>n.value=s)},null,8,["modelValue"])])),_:1})};const y={setup:()=>({value:r(""),value2:r(""),rules:r([{type:"tips",msg:"获取焦点提示信息"},{type:"required",msg:"必填项"},{type:"number",msg:"只能输入数字"}])})};y.render=function(s,a,l,n,t,e){const p=c("ak-input"),r=c("ak-form-item");return o(),d(i,null,[u(r,{label:"title",rules:n.rules},{default:h((()=>[u(p,{modelValue:n.value,"onUpdate:modelValue":a[1]||(a[1]=s=>n.value=s),placeholder:"输入时触发"},null,8,["modelValue"])])),_:1},8,["rules"]),u(r,{label:"title",rules:n.rules,trigger:"blur"},{default:h((()=>[u(p,{modelValue:n.value2,"onUpdate:modelValue":a[2]||(a[2]=s=>n.value2=s),placeholder:"失去焦点触发"},null,8,["modelValue"])])),_:1},8,["rules"])],64)};const q={setup:()=>({value:r(""),value2:r(""),rules:r([{type:"tips",msg:"获取焦点提示信息"},{type:"required",msg:"必填项"},{type:"number",msg:"只能输入数字"}])})};q.render=function(s,a,l,n,t,e){const p=c("ak-input"),r=c("ak-form-item");return o(),d(i,null,[u(r,{label:"title",verify:"tel"},{default:h((()=>[u(p,{modelValue:n.value,"onUpdate:modelValue":a[1]||(a[1]=s=>n.value=s),placeholder:"手机号验证"},null,8,["modelValue"])])),_:1}),u(r,{label:"title",rules:n.rules,verify:"tel"},{default:h((()=>[u(p,{modelValue:n.value2,"onUpdate:modelValue":a[2]||(a[2]=s=>n.value2=s),placeholder:"手机号和必填验证"},null,8,["modelValue"])])),_:1},8,["rules"])],64)};const b={setup(){const s=r();return{value:r(""),rules:r([{type:"required",msg:"年龄不能为空"},{type:"rule",msg:"年龄必须大于1岁，且不能超过120岁",rule:"/^(?:[1-9][0-9]?|1[01][0-9]|120)$/"}]),submit:()=>{s.value.validate().then((s=>{console.log(s)})).catch((s=>{console.log(s)}))},formItemEl:s}}},w=m("submit");b.render=function(s,a,l,n,t,e){const p=c("ak-input"),r=c("ak-form-item"),m=c("ak-button");return o(),d(i,null,[u(r,{label:"age",rules:n.rules,ref:"formItemEl"},{default:h((()=>[u(p,{modelValue:n.value,"onUpdate:modelValue":a[1]||(a[1]=s=>n.value=s),placeholder:"请输入年龄"},null,8,["modelValue"])])),_:1},8,["rules"]),u(m,{onClick:n.submit},{default:h((()=>[w])),_:1},8,["onClick"])],64)};const I={setup(){const s=r(""),a=r(""),l=r([{type:"required",msg:"密码不能为空"},{type:"fn",msg:"两次输入的密码不一致",validator:a=>a===s.value}]);return{value:s,value2:a,rules:l}}};I.render=function(s,a,l,n,t,e){const p=c("ak-input"),r=c("ak-form-item");return o(),d(i,null,[u(r,{label:"password",verify:"required"},{default:h((()=>[u(p,{modelValue:n.value,"onUpdate:modelValue":a[1]||(a[1]=s=>n.value=s),placeholder:"请输入密码"},null,8,["modelValue"])])),_:1}),u(r,{label:"password",rules:n.rules},{default:h((()=>[u(p,{modelValue:n.value2,"onUpdate:modelValue":a[2]||(a[2]=s=>n.value2=s),placeholder:"请再次输入密码"},null,8,["modelValue"])])),_:1},8,["rules"])],64)};const V=j({components:{vdpv_0:k,vdpv_1:y,vdpv_2:q,vdpv_3:b,vdpv_4:I},setup(s){const c=r(),o=r(),d=r(),h=r(),u=r(),i=[c,o,d,h,u],m=v({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0});return j=((s,a)=>{for(var l in a||(a={}))t.call(a,l)&&p(s,l,a[l]);if(n)for(var l of n(a))e.call(a,l)&&p(s,l,a[l]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===m[a+"Height"]?m[a+"Height"]=(i[s].value?i[s].value.offsetHeight:0)||0:m[a+"Height"]=0}},g(m)),a(j,l({vdpv_0Ref:c,vdpv_1Ref:o,vdpv_2Ref:d,vdpv_3Ref:h,vdpv_4Ref:u}));var j}});V.$vd={matter:{},toc:[{content:"FormItem 表单集合",anchor:"formitem-表单集合",level:1},{content:"基本使用",anchor:"基本使用",level:3},{content:"校验",anchor:"校验",level:3},{content:"快速校验",anchor:"快速校验",level:3},{content:"自定义验证规则",anchor:"自定义验证规则",level:3},{content:"回调验证",anchor:"回调验证",level:3},{content:"API",anchor:"api",level:2},{content:"FormItem Props",anchor:"formitem-props",level:3},{content:"FormItem Rules 验证规则",anchor:"formitem-rules-验证规则",level:3},{content:"FormItem Methods",anchor:"formitem-methods",level:3}]};const x=V,H={class:"vuedoc  "},A=_('<h1 id="formitem-表单集合" data-source-line="3"><a class="markdownIt-Anchor" href="#formitem-表单集合">#</a> FormItem 表单集合</h1><p data-source-line="5">强大的校验功能，使用简单快捷</p><h3 id="基本使用" data-source-line="7"><a class="markdownIt-Anchor" href="#基本使用">#</a> 基本使用</h3><pre style="display:none;"></pre>',4),C={class:"vuedoc-demo "},R={class:"vuedoc-demo__inner"},P={class:"vuedoc-demo__preview"},F={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},O=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">return</span> {\n      value\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),U=u("h3",{id:"校验","data-source-line":"29"},[u("a",{class:"markdownIt-Anchor",href:"#校验"},"#"),m(" 校验")],-1),E=u("p",{"data-source-line":"31"},[m("使用"),u("code",null,"rules"),m("规则校验")],-1),M=u("pre",{style:{display:"none"}},null,-1),$={class:"vuedoc-demo "},L={class:"vuedoc-demo__inner"},z={class:"vuedoc-demo__preview"},D={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},S=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;输入时触发&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;blur&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;失去焦点触发&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> value2 = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> rules = ref([\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;tips&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;获取焦点提示信息&#39;</span>},\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;必填项&#39;</span>},\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;number&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;只能输入数字&#39;</span>}\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      value2,\n      rules\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),T=u("h3",{id:"快速校验","data-source-line":"65"},[u("a",{class:"markdownIt-Anchor",href:"#快速校验"},"#"),m(" 快速校验")],-1),W=u("p",{"data-source-line":"67"},[m("对于大量的表单验证不需要精确提示时，如验证为空时统一提示为必填字段，可通过设置"),u("code",null,"verify"),m("，多个用逗号隔开，也可同时和"),u("code",null,"rules"),m("规则校验一起使用")],-1),B=u("pre",{style:{display:"none"}},null,-1),G={class:"vuedoc-demo "},J={class:"vuedoc-demo__inner"},K={class:"vuedoc-demo__preview"},N={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},Q=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">verify</span>=<span class="hljs-string">&quot;tel&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;手机号验证&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">verify</span>=<span class="hljs-string">&quot;tel&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;手机号和必填验证&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> value2 = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> rules = ref([\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;tips&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;获取焦点提示信息&#39;</span>},\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;必填项&#39;</span>},\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;number&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;只能输入数字&#39;</span>}\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      value2,\n      rules\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),X=u("h3",{id:"自定义验证规则","data-source-line":"101"},[u("a",{class:"markdownIt-Anchor",href:"#自定义验证规则"},"#"),m(" 自定义验证规则")],-1),Y=u("pre",{style:{display:"none"}},null,-1),Z={class:"vuedoc-demo "},ss={class:"vuedoc-demo__inner"},as={class:"vuedoc-demo__preview"},ls={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},ns=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;formItemEl&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入年龄&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>submit<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> formItemEl = ref()\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> rules = ref([\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;年龄不能为空&#39;</span>},\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;rule&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;年龄必须大于1岁，且不能超过120岁&#39;</span>, <span class="hljs-attr">rule</span>: <span class="hljs-string">&#39;/^(?:[1-9][0-9]?|1[01][0-9]|120)$/&#39;</span>}\n    ])\n    <span class="hljs-keyword">const</span> submit = <span class="hljs-function">() =&gt;</span> {\n      formItemEl.value.validate()\n        .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> {\n          <span class="hljs-built_in">console</span>.log(res)\n        })\n        .catch(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> {\n          <span class="hljs-built_in">console</span>.log(res)\n        })\n    }\n    <span class="hljs-keyword">return</span> {\n      value,\n      rules,\n      submit,\n      formItemEl\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),ts=u("h3",{id:"回调验证","data-source-line":"141"},[u("a",{class:"markdownIt-Anchor",href:"#回调验证"},"#"),m(" 回调验证")],-1),es=u("pre",{style:{display:"none"}},null,-1),ps={class:"vuedoc-demo "},rs={class:"vuedoc-demo__inner"},cs={class:"vuedoc-demo__preview"},os={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},ds=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">verify</span>=<span class="hljs-string">&quot;required&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请再次输入密码&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> value2 = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> rules = ref([\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;密码不能为空&#39;</span>},\n      {\n        <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;fn&#39;</span>,\n        <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;两次输入的密码不一致&#39;</span>,\n        <span class="hljs-attr">validator</span>: <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> {\n          <span class="hljs-keyword">return</span> val === value.value\n        }\n      }\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      value2,\n      rules\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),hs=_('<h2 id="api" data-source-line="180"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="formitem-props" data-source-line="182"><a class="markdownIt-Anchor" href="#formitem-props">#</a> FormItem Props</h3><table data-source-line="184"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>label</td><td>string</td><td>显示的标签名</td></tr><tr><td>labelVisible</td><td>boolean/false</td><td>隐藏label</td></tr><tr><td>prop</td><td>string</td><td>表单校验时关联表单的校验规则</td></tr><tr><td>required</td><td>boolean/true</td><td>是否根据验证规则自动生成必填样式名</td></tr><tr><td>verify</td><td>string</td><td>快速验证，支持required, mobile, tel, mail, digits, number,phone 多个用逗号隔开</td></tr><tr><td>rules</td><td>array</td><td>校验规则</td></tr><tr><td>showMessage</td><td>boolean/true</td><td>显示错误提示，在form使用时，优先使用form的设置</td></tr><tr><td>trigger</td><td>string/change</td><td>change和blur两种，在form使用时，优先使用form的设置</td></tr><tr><td>labelWidth</td><td>string</td><td>label的宽度</td></tr><tr><td>size</td><td>string</td><td>用于控制该表单内组件的尺寸，medium / small / mini</td></tr></tbody></table><h3 id="formitem-rules-验证规则" data-source-line="197"><a class="markdownIt-Anchor" href="#formitem-rules-验证规则">#</a> FormItem Rules 验证规则</h3><table data-source-line="199"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>为空</td></tr><tr><td>maxLength</td><td>最大字符</td></tr><tr><td>minLength</td><td>最小字符</td></tr><tr><td>mobile</td><td>手机号格式</td></tr><tr><td>tel</td><td>固话</td></tr><tr><td>phone</td><td>固话或手机</td></tr><tr><td>mail</td><td>邮箱格式</td></tr><tr><td>digits</td><td>正整数</td></tr><tr><td>number</td><td>数字</td></tr><tr><td>tips</td><td>获得焦点且值为空时显示输入提示</td></tr><tr><td>rule</td><td>自定义验证规则</td></tr><tr><td>fn</td><td>回调验证</td></tr></tbody></table><h3 id="formitem-methods" data-source-line="214"><a class="markdownIt-Anchor" href="#formitem-methods">#</a> FormItem Methods</h3><table data-source-line="216"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>validate</td><td>对单个表单项进行校验的方法，Promise返回验证结果</td></tr><tr><td>clearTips</td><td>用于清空验证提示信息，恢复初始状态</td></tr></tbody></table>',7);x.render=function(s,a,l,n,t,e){const p=c("vdpv_0"),r=c("vdpv_1"),h=c("vdpv_2"),i=c("vdpv_3"),m=c("vdpv_4");return o(),d("div",H,[A,u("div",C,[u("div",R,[u("div",P,[u(p)]),u("div",{style:{height:s.vdpv_0Height+"px"},class:"vuedoc-demo__source"},[u("div",F,[O],512)],4),u("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},f(s.vdpv_0Height>0?"hidden":"show"),1)])]),U,E,M,u("div",$,[u("div",L,[u("div",z,[u(r)]),u("div",{style:{height:s.vdpv_1Height+"px"},class:"vuedoc-demo__source"},[u("div",D,[S],512)],4),u("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},f(s.vdpv_1Height>0?"hidden":"show"),1)])]),T,W,B,u("div",G,[u("div",J,[u("div",K,[u(h)]),u("div",{style:{height:s.vdpv_2Height+"px"},class:"vuedoc-demo__source"},[u("div",N,[Q],512)],4),u("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},f(s.vdpv_2Height>0?"hidden":"show"),1)])]),X,Y,u("div",Z,[u("div",ss,[u("div",as,[u(i)]),u("div",{style:{height:s.vdpv_3Height+"px"},class:"vuedoc-demo__source"},[u("div",ls,[ns],512)],4),u("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(3))},f(s.vdpv_3Height>0?"hidden":"show"),1)])]),ts,es,u("div",ps,[u("div",rs,[u("div",cs,[u(m)]),u("div",{style:{height:s.vdpv_4Height+"px"},class:"vuedoc-demo__source"},[u("div",os,[ds],512)],4),u("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(4))},f(s.vdpv_4Height>0?"hidden":"show"),1)])]),hs])};export default x;
