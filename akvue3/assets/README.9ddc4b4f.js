var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,e=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;import{a as c,o as r,c as h,r as o,f as d,t as j,b as i,w as g,E as u,d as v,y as b,A as m,M as k}from"./vendor.19f0dac7.js";const _={setup:()=>({data:[{label:"广东",children:[{label:"广州",children:[{label:"天河区"},{label:"白云区"},{label:"越秀区"},{label:"海珠区"}]},{label:"深圳"},{label:"东莞"},{label:"佛山"}]},{label:"广西"},{label:"北京"}]})};_.render=function(s,a,n,l,t,p){const e=c("ak-tree");return r(),h(e,{data:l.data},null,8,["data"])};const f={setup:()=>({data:[{label:"广东",open:!0,children:[{label:"广州",children:[{label:"天河区"},{label:"白云区"},{label:"越秀区"},{label:"海珠区"}]},{label:"深圳"},{label:"东莞"},{label:"佛山"}]},{label:"广西"},{label:"北京"}]})};f.render=function(s,a,n,l,t,p){const e=c("ak-tree");return r(),h(e,{data:l.data},null,8,["data"])};const y={setup:()=>({data:[{id:"gd",label:"广东",children:[{id:"gz",label:"广州",children:[{id:"th",label:"天河区"},{id:"by",label:"白云区"},{id:"yx",label:"越秀区"},{id:"hz",label:"海珠区"}]},{id:"sz",label:"深圳"},{id:"dg",label:"东莞"},{id:"fs",label:"佛山"}]},{id:"gx",label:"广西"},{id:"bj",label:"北京"}],value:o("gd")})};y.render=function(s,a,n,l,t,p){const e=c("ak-tree");return r(),h("p",null,[d("当前选中值："+j(l.value)+" ",1),i(e,{data:l.data,modelValue:l.value,"onUpdate:modelValue":a[1]||(a[1]=s=>l.value=s)},null,8,["data","modelValue"])])};const w={setup:()=>({data:[{id:"gd",label:"广东"},{id:"gx",label:"广西"},{id:"bj",label:"北京"},{id:"sh",label:"上海",hasChild:!1}],click:(s,a)=>{if(!s.isLoad){let n=[];"gd"===s.id&&(n=[{label:"天河区",hasChild:!1},{label:"白云区",hasChild:!1}]),"gx"===s.id&&(n=[{label:"桂林市",hasChild:!1},{label:"南宁市",hasChild:!1}]),"bj"===s.id&&(n=[{label:"朝阳区",hasChild:!1},{label:"东城区",hasChild:!1}]),setTimeout((()=>{a&&a(n)}),5e3)}}})};w.render=function(s,a,n,l,t,p){const e=c("ak-tree");return r(),h("p",null,[i(e,{data:l.data,onClick:l.click,lazy:!0},null,8,["data","onClick"])])};const q={setup:()=>({data:[{label:"广东",children:[{label:"广州",children:[{label:"天河区"},{label:"白云区"},{label:"越秀区"},{label:"海珠区"}]},{label:"深圳"},{label:"东莞"},{label:"佛山"}]},{label:"广西"},{label:"北京"}],change:s=>{alert(JSON.stringify(s))}})};q.render=function(s,a,n,l,t,p){const e=c("ak-tree");return r(),h(e,{data:l.data,showCheckbox:!0,onChange:l.change},null,8,["data","onChange"])};const x={setup:()=>({data:[{label:"广东",children:[{label:"广州",children:[{label:"天河区"},{label:"白云区"},{label:"越秀区"},{label:"海珠区"}]},{label:"深圳"},{label:"东莞"},{label:"佛山"}]},{label:"广西"},{label:"北京"}],click:s=>{alert(JSON.stringify(s))}})},C=d("添加"),H=d("修改"),A=d("删除");x.render=function(s,a,n,l,t,p){const e=c("ak-button"),o=c("ak-button-group"),d=c("ak-tree");return r(),h(d,{data:l.data},{default:g((s=>[i(o,{style:{"margin-left":"5px"}},{default:g((()=>[i(e,{type:"text",onClick:u((a=>l.click(s)),["stop"])},{default:g((()=>[C])),_:2},1032,["onClick"]),i(e,{type:"text",onClick:u((a=>l.click(s)),["stop"])},{default:g((()=>[H])),_:2},1032,["onClick"]),i(e,{type:"text",onClick:u((a=>l.click(s)),["stop"])},{default:g((()=>[A])),_:2},1032,["onClick"])])),_:2},1024)])),_:1},8,["data"])};const I={setup(){const s=o();return{data:[{label:"广东",children:[{label:"广州",children:[{label:"天河区"},{label:"白云区"},{label:"越秀区"},{label:"海珠区"}]},{label:"深圳"},{label:"东莞"},{label:"佛山"}]},{label:"广西"},{label:"北京"}],click:s=>{alert(JSON.stringify(s))},getValue:a=>{console.log(s.value.getValue(a))},treeEl:s}}},O=d("添加"),R=d("修改"),V=d("删除"),z=i("p",null,null,-1),E=d("取值"),T=d("取值(label)");I.render=function(s,a,n,l,t,p){const e=c("ak-button"),o=c("ak-button-group"),d=c("ak-tree");return r(),h("div",null,[i(d,{data:l.data,showCheckbox:!0,ref:"treeEl"},{default:g((s=>[i(o,{style:{"margin-left":"5px"}},{default:g((()=>[i(e,{type:"text",onClick:u((a=>l.click(s)),["stop"])},{default:g((()=>[O])),_:2},1032,["onClick"]),i(e,{type:"text",onClick:u((a=>l.click(s)),["stop"])},{default:g((()=>[R])),_:2},1032,["onClick"]),i(e,{type:"text",onClick:u((a=>l.click(s)),["stop"])},{default:g((()=>[V])),_:2},1032,["onClick"])])),_:2},1024)])),_:1},8,["data"]),z,i(o,null,{default:g((()=>[i(e,{onClick:a[1]||(a[1]=s=>l.getValue())},{default:g((()=>[E])),_:1}),i(e,{onClick:a[2]||(a[2]=s=>l.getValue(!0))},{default:g((()=>[T])),_:1})])),_:1})])};const P=v({components:{vdpv_0:_,vdpv_1:f,vdpv_2:y,vdpv_3:w,vdpv_4:q,vdpv_5:x,vdpv_6:I},setup(s){const c=o(),r=o(),h=o(),d=o(),j=o(),i=o(),g=o(),u=[c,r,h,d,j,i,g],v=b({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0,vdpv_5Height:0,vdpv_6Height:0});return k=((s,a)=>{for(var n in a||(a={}))t.call(a,n)&&e(s,n,a[n]);if(l)for(var n of l(a))p.call(a,n)&&e(s,n,a[n]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===v[a+"Height"]?v[a+"Height"]=(u[s].value?u[s].value.offsetHeight:0)||0:v[a+"Height"]=0}},m(v)),a(k,n({vdpv_0Ref:c,vdpv_1Ref:r,vdpv_2Ref:h,vdpv_3Ref:d,vdpv_4Ref:j,vdpv_5Ref:i,vdpv_6Ref:g}));var k}});P.$vd={matter:{},toc:[{content:"Tree 树",anchor:"tree-树",level:1},{content:"基本用法",anchor:"基本用法",level:3},{content:"默认展开指定项",anchor:"默认展开指定项",level:3},{content:"点击可选中值",anchor:"点击可选中值",level:3},{content:"异步加载数据",anchor:"异步加载数据",level:3},{content:"支持勾选",anchor:"支持勾选",level:3},{content:"可使用slot自定义显示内容",anchor:"可使用slot自定义显示内容",level:3},{content:"使用getValue取值",anchor:"使用getvalue取值",level:3},{content:"API",anchor:"api",level:2},{content:"Tree Props",anchor:"tree-props",level:3},{content:"Tree Event",anchor:"tree-event",level:3},{content:"Tree Data",anchor:"tree-data",level:3}]};const D=P,S={class:"vuedoc  "},J=k('<h1 id="tree-树" data-source-line="3"><a class="markdownIt-Anchor" href="#tree-树">#</a> Tree 树</h1><h3 id="基本用法" data-source-line="5"><a class="markdownIt-Anchor" href="#基本用法">#</a> 基本用法</h3><pre style="display:none;"></pre>',3),N={class:"vuedoc-demo "},B={class:"vuedoc-demo__inner"},L={class:"vuedoc-demo__preview"},M={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},U=k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-tree</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> data = [\n      {\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广东&#39;</span>, <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广州&#39;</span>, <span class="hljs-attr">children</span>: [\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;天河区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;白云区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;越秀区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;海珠区&#39;</span>}\n            ]\n          },\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;深圳&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;东莞&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;佛山&#39;</span>},\n        ]\n      },\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广西&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>},\n    ]\n    <span class="hljs-keyword">return</span> {\n      data\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),$=i("h3",{id:"默认展开指定项","data-source-line":"44"},[i("a",{class:"markdownIt-Anchor",href:"#默认展开指定项"},"#"),d(" 默认展开指定项")],-1),F=i("p",{"data-source-line":"46"},[d("在列表数据"),i("code",null,"data"),d("里使用"),i("code",null,'open="true"'),d("可默认展开")],-1),G=i("pre",{style:{display:"none"}},null,-1),K={class:"vuedoc-demo "},Q={class:"vuedoc-demo__inner"},W={class:"vuedoc-demo__preview"},X={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},Y=k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-tree</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> data = [\n      {\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广东&#39;</span>, <span class="hljs-attr">open</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广州&#39;</span>, <span class="hljs-attr">children</span>: [\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;天河区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;白云区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;越秀区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;海珠区&#39;</span>}\n            ]\n          },\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;深圳&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;东莞&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;佛山&#39;</span>},\n        ]\n      },\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广西&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>},\n    ]\n    <span class="hljs-keyword">return</span> {\n      data\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Z=k('<h3 id="点击可选中值" data-source-line="85"><a class="markdownIt-Anchor" href="#点击可选中值">#</a> 点击可选中值</h3><p data-source-line="87">使用<code>v-model=&quot;string/array&quot;</code>，为<code>string</code>时单选，<code>array</code>时可多选，对应数据列表<code>data</code>的<code>id</code>值</p><pre style="display:none;"></pre>',3),ss={class:"vuedoc-demo "},as={class:"vuedoc-demo__inner"},ns={class:"vuedoc-demo__preview"},ls={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},ts=k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当前选中值：{{value}}\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tree</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;gd&#39;</span>)\n    <span class="hljs-keyword">const</span> data = [\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;gd&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广东&#39;</span>, <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;gz&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广州&#39;</span>, <span class="hljs-attr">children</span>: [\n              {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;th&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;天河区&#39;</span>},\n              {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;by&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;白云区&#39;</span>},\n              {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;yx&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;越秀区&#39;</span>},\n              {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;hz&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;海珠区&#39;</span>}\n            ]\n          },\n          {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;sz&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;深圳&#39;</span>},\n          {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;dg&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;东莞&#39;</span>},\n          {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;fs&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;佛山&#39;</span>},\n        ]\n      },\n      {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;gx&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广西&#39;</span>},\n      {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;bj&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>},\n    ]\n    <span class="hljs-keyword">return</span> {\n      data,\n      value\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),ps=i("h3",{id:"异步加载数据","data-source-line":"130"},[i("a",{class:"markdownIt-Anchor",href:"#异步加载数据"},"#"),d(" 异步加载数据")],-1),es=i("p",{"data-source-line":"132"},[d("使用"),i("code",null,'lazy="true"'),d("，在点击展开时可异步加载数据，开启异步加载点击可返回回调方法，用于加载新数据。 返回当前项数据时会添加"),i("code",null,"isLoad"),d("属性，用于表示当前项是否已经请求过数据，可减少重复请求")],-1),cs=i("pre",{style:{display:"none"}},null,-1),rs={class:"vuedoc-demo "},hs={class:"vuedoc-demo__inner"},os={class:"vuedoc-demo__preview"},ds={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},js=k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tree</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;click&quot;</span> <span class="hljs-attr">:lazy</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> data = [\n      {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;gd&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广东&#39;</span>},\n      {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;gx&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广西&#39;</span>},\n      {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;bj&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>},\n      {<span class="hljs-attr">id</span>: <span class="hljs-string">&#39;sh&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;上海&#39;</span>, <span class="hljs-attr">hasChild</span>: <span class="hljs-literal">false</span>} <span class="hljs-comment">// hasChild=false表示没有下级可加载</span>\n    ]\n    <span class="hljs-keyword">const</span> click = <span class="hljs-function">(<span class="hljs-params">item, resolve</span>) =&gt;</span> {\n      <span class="hljs-keyword">if</span> (!item.isLoad) { <span class="hljs-comment">// false表示还没展开加载过</span>\n        <span class="hljs-keyword">let</span> newData = []\n        <span class="hljs-keyword">if</span> (item.id === <span class="hljs-string">&#39;gd&#39;</span>) {\n          <span class="hljs-comment">// 根据当前项的相关参数请求下一级</span>\n          newData = [{<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;天河区&#39;</span>, <span class="hljs-attr">hasChild</span>: <span class="hljs-literal">false</span>}, {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;白云区&#39;</span>, <span class="hljs-attr">hasChild</span>: <span class="hljs-literal">false</span>}]\n        }\n        <span class="hljs-keyword">if</span> (item.id === <span class="hljs-string">&#39;gx&#39;</span>) {\n          <span class="hljs-comment">// 根据当前项的相关参数请求下一级</span>\n          newData = [{<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;桂林市&#39;</span>, <span class="hljs-attr">hasChild</span>: <span class="hljs-literal">false</span>}, {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;南宁市&#39;</span>, <span class="hljs-attr">hasChild</span>: <span class="hljs-literal">false</span>}]\n        }\n        <span class="hljs-keyword">if</span> (item.id === <span class="hljs-string">&#39;bj&#39;</span>) {\n          <span class="hljs-comment">// 根据当前项的相关参数请求下一级</span>\n          newData = [{<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;朝阳区&#39;</span>, <span class="hljs-attr">hasChild</span>: <span class="hljs-literal">false</span>}, {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;东城区&#39;</span>, <span class="hljs-attr">hasChild</span>: <span class="hljs-literal">false</span>}]\n        }\n        <span class="hljs-comment">// 模拟请求数据</span>\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          resolve &amp;&amp; resolve(newData)\n        }, <span class="hljs-number">5000</span>)\n      }\n    }\n    <span class="hljs-keyword">return</span> {\n      data,\n      click\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),is=i("h3",{id:"支持勾选","data-source-line":"182"},[i("a",{class:"markdownIt-Anchor",href:"#支持勾选"},"#"),d(" 支持勾选")],-1),gs=i("p",{"data-source-line":"184"},[i("code",null,'showCheckbox="true"'),d("可支持勾选，"),i("code",null,"change"),d("为勾选改变事件")],-1),us=i("pre",{style:{display:"none"}},null,-1),vs={class:"vuedoc-demo "},bs={class:"vuedoc-demo__inner"},ms={class:"vuedoc-demo__preview"},ks={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},_s=k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-tree</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span> <span class="hljs-attr">:showCheckbox</span>=<span class="hljs-string">&quot;true&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;change&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> data = [\n      {\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广东&#39;</span>, <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广州&#39;</span>, <span class="hljs-attr">children</span>: [\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;天河区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;白云区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;越秀区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;海珠区&#39;</span>}\n            ]\n          },\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;深圳&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;东莞&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;佛山&#39;</span>}\n        ]\n      },\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广西&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>}\n    ]\n    <span class="hljs-keyword">const</span> change = <span class="hljs-function"><span class="hljs-params">obj</span> =&gt;</span> {\n      alert(<span class="hljs-built_in">JSON</span>.stringify(obj))\n    }\n    <span class="hljs-keyword">return</span> {\n      data,\n      change\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),fs=i("h3",{id:"可使用slot自定义显示内容","data-source-line":"228"},[i("a",{class:"markdownIt-Anchor",href:"#可使用slot自定义显示内容"},"#"),d(" 可使用slot自定义显示内容")],-1),ys=i("pre",{style:{display:"none"}},null,-1),ws={class:"vuedoc-demo "},qs={class:"vuedoc-demo__inner"},xs={class:"vuedoc-demo__preview"},Cs={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},Hs=k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-tree</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;slot&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">ak-button-group</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-left: 5px&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;click(slot)&quot;</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;click(slot)&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;click(slot)&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">ak-button-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-tree</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> data = [\n      {\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广东&#39;</span>, <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广州&#39;</span>, <span class="hljs-attr">children</span>: [\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;天河区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;白云区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;越秀区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;海珠区&#39;</span>}\n            ]\n          },\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;深圳&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;东莞&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;佛山&#39;</span>}\n        ]\n      },\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广西&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>}\n    ]\n    <span class="hljs-keyword">const</span> click = <span class="hljs-function"><span class="hljs-params">obj</span> =&gt;</span> {\n      alert(<span class="hljs-built_in">JSON</span>.stringify(obj))\n    }\n    <span class="hljs-keyword">return</span> {\n      data,\n      click\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),As=i("h3",{id:"使用getvalue取值","data-source-line":"280"},[i("a",{class:"markdownIt-Anchor",href:"#使用getvalue取值"},"#"),d(" 使用getValue取值")],-1),Is=i("pre",{style:{display:"none"}},null,-1),Os={class:"vuedoc-demo "},Rs={class:"vuedoc-demo__inner"},Vs={class:"vuedoc-demo__preview"},zs={ref:"vdpv_6Ref",class:"vuedoc-demo__sourceref"},Es=k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tree</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span> <span class="hljs-attr">:showCheckbox</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;treeEl&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;slot&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button-group</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-left: 5px&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;click(slot)&quot;</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;click(slot)&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;click(slot)&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">ak-button-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-tree</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;getValue()&quot;</span>&gt;</span>取值<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;getValue(true)&quot;</span>&gt;</span>取值(label)<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-button-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> treeEl = ref()\n    <span class="hljs-keyword">const</span> data = [\n      {\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广东&#39;</span>, <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广州&#39;</span>, <span class="hljs-attr">children</span>: [\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;天河区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;白云区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;越秀区&#39;</span>},\n              {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;海珠区&#39;</span>}\n            ]\n          },\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;深圳&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;东莞&#39;</span>},\n          {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;佛山&#39;</span>}\n        ]\n      },\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广西&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>}\n    ]\n    <span class="hljs-keyword">const</span> click = <span class="hljs-function"><span class="hljs-params">obj</span> =&gt;</span> {\n      alert(<span class="hljs-built_in">JSON</span>.stringify(obj))\n    }\n    <span class="hljs-keyword">const</span> getValue = <span class="hljs-function"><span class="hljs-params">bool</span> =&gt;</span> {\n      <span class="hljs-built_in">console</span>.log(treeEl.value.getValue(bool))\n    }\n    <span class="hljs-keyword">return</span> {\n      data,\n      click,\n      getValue,\n      treeEl\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),Ts=k('<h2 id="api" data-source-line="345"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="tree-props" data-source-line="347"><a class="markdownIt-Anchor" href="#tree-props">#</a> Tree Props</h3><table data-source-line="349"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>Array</td><td>列表数据</td></tr><tr><td>showCheckbox</td><td>Boolean/false</td><td>显示勾选</td></tr><tr><td>lazy</td><td>Boolean/false</td><td>是否异步加载</td></tr><tr><td>v-model</td><td>Array/string</td><td>选中的值，array时为多选</td></tr></tbody></table><h3 id="tree-event" data-source-line="356"><a class="markdownIt-Anchor" href="#tree-event">#</a> Tree Event</h3><table data-source-line="358"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>click</td><td>点击事件</td></tr></tbody></table><h3 id="tree-data" data-source-line="362"><a class="markdownIt-Anchor" href="#tree-data">#</a> Tree Data</h3><table data-source-line="364"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>唯一值</td></tr><tr><td>checked</td><td>Boolean/false</td><td>当前项为勾选状态，仅当showCheckbox=true时有效</td></tr><tr><td>open</td><td>Boolean/false</td><td>是否展开当前项</td></tr><tr><td>hasChild</td><td>Boolean/false</td><td>表示当前级下没有子级可加载。仅在<code>tree</code>里设置了异步加载<code>lazy=&quot;true&quot;</code>时有效</td></tr></tbody></table>',7);D.render=function(s,a,n,l,t,p){const e=c("vdpv_0"),o=c("vdpv_1"),d=c("vdpv_2"),g=c("vdpv_3"),u=c("vdpv_4"),v=c("vdpv_5"),b=c("vdpv_6");return r(),h("div",S,[J,i("div",N,[i("div",B,[i("div",L,[i(e)]),i("div",{style:{height:s.vdpv_0Height+"px"},class:"vuedoc-demo__source"},[i("div",M,[U],512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},j(s.vdpv_0Height>0?"hidden":"show"),1)])]),$,F,G,i("div",K,[i("div",Q,[i("div",W,[i(o)]),i("div",{style:{height:s.vdpv_1Height+"px"},class:"vuedoc-demo__source"},[i("div",X,[Y],512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},j(s.vdpv_1Height>0?"hidden":"show"),1)])]),Z,i("div",ss,[i("div",as,[i("div",ns,[i(d)]),i("div",{style:{height:s.vdpv_2Height+"px"},class:"vuedoc-demo__source"},[i("div",ls,[ts],512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},j(s.vdpv_2Height>0?"hidden":"show"),1)])]),ps,es,cs,i("div",rs,[i("div",hs,[i("div",os,[i(g)]),i("div",{style:{height:s.vdpv_3Height+"px"},class:"vuedoc-demo__source"},[i("div",ds,[js],512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(3))},j(s.vdpv_3Height>0?"hidden":"show"),1)])]),is,gs,us,i("div",vs,[i("div",bs,[i("div",ms,[i(u)]),i("div",{style:{height:s.vdpv_4Height+"px"},class:"vuedoc-demo__source"},[i("div",ks,[_s],512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(4))},j(s.vdpv_4Height>0?"hidden":"show"),1)])]),fs,ys,i("div",ws,[i("div",qs,[i("div",xs,[i(v)]),i("div",{style:{height:s.vdpv_5Height+"px"},class:"vuedoc-demo__source"},[i("div",Cs,[Hs],512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[6]||(a[6]=a=>s.toggleCode(5))},j(s.vdpv_5Height>0?"hidden":"show"),1)])]),As,Is,i("div",Os,[i("div",Rs,[i("div",Vs,[i(b)]),i("div",{style:{height:s.vdpv_6Height+"px"},class:"vuedoc-demo__source"},[i("div",zs,[Es],512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[7]||(a[7]=a=>s.toggleCode(6))},j(s.vdpv_6Height>0?"hidden":"show"),1)])]),Ts])};export default D;
