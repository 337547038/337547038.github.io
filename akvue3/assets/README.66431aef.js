var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,e=Object.prototype.hasOwnProperty,t=Object.prototype.propertyIsEnumerable,p=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l,c=(s,a)=>{for(var n in a||(a={}))e.call(a,n)&&p(s,n,a[n]);if(l)for(var n of l(a))t.call(a,n)&&p(s,n,a[n]);return s},o=(s,l)=>a(s,n(l));import{y as h,A as r,a as d,o as u,c as j,b as g,w as i,f as v,t as k,F as m,r as b,d as x,M as _}from"./vendor.19f0dac7.js";const f={setup(){const s=h({checkbox1:!0,checkbox2:!1,checkbox3:"1",checkbox4:["4"],checkbox5:[]});return c({},r(s))}},y=v("选项1"),w=v("选项2"),q=v("选项3"),V=g("p",null,"选中时返回指定值（v-model=value或是value存在于v-model数组中，即选中状态）",-1),C=v("选项4"),R=v("选项5");f.render=function(s,a,n,l,e,t){const p=d("ak-checkbox");return u(),j(m,null,[g("p",null,[g(p,{modelValue:s.checkbox1,"onUpdate:modelValue":a[1]||(a[1]=a=>s.checkbox1=a)},{default:i((()=>[y])),_:1},8,["modelValue"]),v(" "+k(s.checkbox1),1)]),g("p",null,[g(p,{modelValue:s.checkbox2,"onUpdate:modelValue":a[2]||(a[2]=a=>s.checkbox2=a)},{default:i((()=>[w])),_:1},8,["modelValue"]),v(" "+k(s.checkbox2),1)]),g("p",null,[g(p,{modelValue:s.checkbox3,"onUpdate:modelValue":a[3]||(a[3]=a=>s.checkbox3=a)},{default:i((()=>[q])),_:1},8,["modelValue"]),v(" "+k(s.checkbox3)+"（v-model的值只要为true都会是勾选状态） ",1)]),V,g("p",null,[g(p,{modelValue:s.checkbox4,"onUpdate:modelValue":a[4]||(a[4]=a=>s.checkbox4=a),value:"4"},{default:i((()=>[C])),_:1},8,["modelValue"]),v(" "+k(s.checkbox4),1)]),g("p",null,[g(p,{modelValue:s.checkbox5,"onUpdate:modelValue":a[5]||(a[5]=a=>s.checkbox5=a),value:"5"},{default:i((()=>[R])),_:1},8,["modelValue"]),v(" "+k(s.checkbox5),1)])],64)};const H={setup(){const s=h({checkbox6:!0,checkbox7:!1});return c({},r(s))}},D=v("选项1"),A=v("选项2");H.render=function(s,a,n,l,e,t){const p=d("ak-checkbox");return u(),j(m,null,[g("p",null,[g(p,{modelValue:s.checkbox6,"onUpdate:modelValue":a[1]||(a[1]=a=>s.checkbox6=a),disabled:!0},{default:i((()=>[D])),_:1},8,["modelValue"]),v(" "+k(s.checkbox6),1)]),g("p",null,[g(p,{modelValue:s.checkbox7,"onUpdate:modelValue":a[2]||(a[2]=a=>s.checkbox7=a),disabled:!0},{default:i((()=>[A])),_:1},8,["modelValue"]),v(" "+k(s.checkbox7),1)])],64)};const I={setup(){const s=h({checkbox8:["a1","a6"]});return o(c({},r(s)),{groupData:[{label:"选项1",value:"a1"},{label:"选项2",value:"a2"},{label:"选项3",value:"a3"},{value:"a4"},{label:"禁用",value:"a5",disabled:!0},{label:"勾选禁用",value:"a6",disabled:!0}]})}};I.render=function(s,a,n,l,e,t){const p=d("ak-checkbox-group");return u(),j(m,null,[g("p",null,"已选值："+k(s.checkbox8),1),g("p",null,[g(p,{modelValue:s.checkbox8,"onUpdate:modelValue":a[1]||(a[1]=a=>s.checkbox8=a),options:l.groupData},null,8,["modelValue","options"])])],64)};const G={setup(){const s=h({checkbox9:["a5"]});return o(c({},r(s)),{groupData:[{label:"选项1",value:"a1"},{label:"选项2",value:"a2"},{label:"选项3",value:"a3"},{value:"a4"},{label:"禁用",value:"a5",disabled:!0},{label:"勾选禁用",value:"a6",disabled:!0}]})}};G.render=function(s,a,n,l,e,t){const p=d("ak-checkbox-group");return u(),j(m,null,[g("p",null,"已选值："+k(s.checkbox9),1),g("p",null,[g(p,{modelValue:s.checkbox9,"onUpdate:modelValue":a[1]||(a[1]=a=>s.checkbox9=a),options:l.groupData,min:2,max:4},null,8,["modelValue","options"])])],64)};const U={setup(){const s=h({checkbox11:["a1"]}),a=b();return o(c({},r(s)),{groupData:[{label:"选项1",value:"a1"},{label:"选项2",value:"a2"},{label:"选项3",value:"a3"},{value:"a4"},{label:"禁用",value:"a5",disabled:!0},{label:"勾选禁用",value:"a6",disabled:!0}],checkGroup:a,getValue:()=>{const s=a.value.getValue();console.log(s)}})}},O=v("全选"),S=v("全不选"),P=v("获取值");U.render=function(s,a,n,l,e,t){const p=d("ak-checkbox-group"),c=d("ak-button");return u(),j(m,null,[g("p",null,"已选值："+k(s.checkbox11),1),g("p",null,[g(p,{ref:"checkGroup",modelValue:s.checkbox11,"onUpdate:modelValue":a[1]||(a[1]=a=>s.checkbox11=a),options:l.groupData},null,8,["modelValue","options"])]),g("p",null,[g(c,{onClick:a[2]||(a[2]=a=>s.$refs.checkGroup.toggleSelect(!0))},{default:i((()=>[O])),_:1}),g(c,{onClick:a[3]||(a[3]=a=>s.$refs.checkGroup.toggleSelect(!1))},{default:i((()=>[S])),_:1}),g(c,{onClick:l.getValue},{default:i((()=>[P])),_:1},8,["onClick"])])],64)};const E={setup(){const s=h({checkbox10:["a1"]});return c({},r(s))}},$=v("选项1"),B=v("选项2"),F=v("选项3"),M=v("选项4"),z=v("全选"),J=v("全不选");E.render=function(s,a,n,l,e,t){const p=d("ak-checkbox"),c=d("ak-button");return u(),j(m,null,[g("p",null,"当前选中值："+k(s.checkbox10),1),g("p",null,[g(p,{modelValue:s.checkbox10,"onUpdate:modelValue":a[1]||(a[1]=a=>s.checkbox10=a),value:"a1"},{default:i((()=>[$])),_:1},8,["modelValue"])]),g("p",null,[g(p,{modelValue:s.checkbox10,"onUpdate:modelValue":a[2]||(a[2]=a=>s.checkbox10=a),value:"a2"},{default:i((()=>[B])),_:1},8,["modelValue"])]),g("p",null,[g(p,{modelValue:s.checkbox10,"onUpdate:modelValue":a[3]||(a[3]=a=>s.checkbox10=a),value:"a3"},{default:i((()=>[F])),_:1},8,["modelValue"])]),g("p",null,[g(p,{modelValue:s.checkbox10,"onUpdate:modelValue":a[4]||(a[4]=a=>s.checkbox10=a),value:"a4"},{default:i((()=>[M])),_:1},8,["modelValue"])]),g("p",null,[g(c,{onClick:a[5]||(a[5]=a=>s.checkbox10=["a1","a2","a3","a4"])},{default:i((()=>[z])),_:1}),g(c,{onClick:a[6]||(a[6]=a=>s.checkbox10=[])},{default:i((()=>[J])),_:1})])],64)};const K={setup(){const s=h({checkbox:"",checkbox2:["a1"]});return o(c({},r(s)),{groupData:[{label:"选项1",value:"a1"},{label:"选项2",value:"a2"}],beforeChange:()=>(console.log("return false 阻止勾选"),!1)})}},L=v("选项1");K.render=function(s,a,n,l,e,t){const p=d("ak-checkbox"),c=d("ak-checkbox-group");return u(),j(m,null,[g("p",null,[g(p,{modelValue:s.checkbox,"onUpdate:modelValue":a[1]||(a[1]=a=>s.checkbox=a),value:"a1",beforeChange:l.beforeChange},{default:i((()=>[L])),_:1},8,["modelValue","beforeChange"])]),g("p",null,[g(c,{modelValue:s.checkbox2,"onUpdate:modelValue":a[2]||(a[2]=a=>s.checkbox2=a),options:l.groupData,beforeChange:l.beforeChange},null,8,["modelValue","options","beforeChange"])])],64)};const N=x({components:{vdpv_0:f,vdpv_1:H,vdpv_2:I,vdpv_3:G,vdpv_4:U,vdpv_5:E,vdpv_6:K},setup(s){const a=b(),n=b(),l=b(),e=b(),t=b(),p=b(),d=b(),u=[a,n,l,e,t,p,d],j=h({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0,vdpv_5Height:0,vdpv_6Height:0});return o(c({toggleCode:s=>{const a="vdpv_"+s;0===j[a+"Height"]?j[a+"Height"]=(u[s].value?u[s].value.offsetHeight:0)||0:j[a+"Height"]=0}},r(j)),{vdpv_0Ref:a,vdpv_1Ref:n,vdpv_2Ref:l,vdpv_3Ref:e,vdpv_4Ref:t,vdpv_5Ref:p,vdpv_6Ref:d})}});N.$vd={matter:{},toc:[{content:"Checkbox 多选框",anchor:"checkbox-多选框",level:1},{content:"基础用法",anchor:"基础用法",level:3},{content:"禁用状态",anchor:"禁用状态",level:3},{content:"多选框组",anchor:"多选框组",level:3},{content:"可选项目数量的限制",anchor:"可选项目数量的限制",level:3},{content:"组全选或全不选方法",anchor:"组全选或全不选方法",level:3},{content:"多个单一组成的组",anchor:"多个单一组成的组",level:3},{content:"阻止改变事件",anchor:"阻止改变事件",level:3},{content:"API",anchor:"api",level:2},{content:"Checkbox",anchor:"checkbox",level:3},{content:"Checkbox Event",anchor:"checkbox-event",level:3},{content:"CheckboxGroup",anchor:"checkboxgroup",level:3},{content:"CheckboxGroup Methods",anchor:"checkboxgroup-methods",level:3},{content:"CheckboxGroup Event",anchor:"checkboxgroup-event",level:3}]};const Q=N,T={class:"vuedoc  "},W=_('<h1 id="checkbox-多选框" data-source-line="3"><a class="markdownIt-Anchor" href="#checkbox-多选框">#</a> Checkbox 多选框</h1><h3 id="基础用法" data-source-line="5"><a class="markdownIt-Anchor" href="#基础用法">#</a> 基础用法</h3><p data-source-line="7">单一的<code>checkbox</code>中，默认绑定变量的值会是<code>Boolean</code>，选中为<code>true</code>。如选中时需要返回指定的值，则添加<code>value</code></p><pre style="display:none;"></pre>',4),X={class:"vuedoc-demo "},Y={class:"vuedoc-demo__inner"},Z={class:"vuedoc-demo__preview"},ss={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},as=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox1&quot;</span>&gt;</span>选项1<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n    {{checkbox1}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox2&quot;</span>&gt;</span>选项2<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n    {{checkbox2}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox3&quot;</span>&gt;</span>选项3<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n    {{checkbox3}}（v-model的值只要为true都会是勾选状态）\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>选中时返回指定值（v-model=value或是value存在于v-model数组中，即选中状态）<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox4&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>选项4<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n    {{checkbox4}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox5&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>选项5<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n    {{checkbox5}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {reactive, toRefs} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> state = reactive({\n      <span class="hljs-attr">checkbox1</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">checkbox2</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">checkbox3</span>: <span class="hljs-string">&#39;1&#39;</span>,\n      <span class="hljs-attr">checkbox4</span>: [<span class="hljs-string">&#39;4&#39;</span>],\n      <span class="hljs-attr">checkbox5</span>: []\n    })\n    <span class="hljs-keyword">return</span> {\n      ...toRefs(state)\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),ns=g("h3",{id:"禁用状态","data-source-line":"54"},[g("a",{class:"markdownIt-Anchor",href:"#禁用状态"},"#"),v(" 禁用状态")],-1),ls=g("p",{"data-source-line":"56"},"多选框不可用状态",-1),es=g("pre",{style:{display:"none"}},null,-1),ts={class:"vuedoc-demo "},ps={class:"vuedoc-demo__inner"},cs={class:"vuedoc-demo__preview"},os={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},hs=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox6&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>选项1<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n    {{checkbox6}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox7&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>选项2<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n    {{checkbox7}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {reactive, toRefs} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> state = reactive({\n      <span class="hljs-attr">checkbox6</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">checkbox7</span>: <span class="hljs-literal">false</span>\n    })\n    <span class="hljs-keyword">return</span> {\n      ...toRefs(state)\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),rs=g("h3",{id:"多选框组","data-source-line":"87"},[g("a",{class:"markdownIt-Anchor",href:"#多选框组"},"#"),v(" 多选框组")],-1),ds=g("p",{"data-source-line":"89"},"options中选项label可为空",-1),us=g("pre",{style:{display:"none"}},null,-1),js={class:"vuedoc-demo "},gs={class:"vuedoc-demo__inner"},is={class:"vuedoc-demo__preview"},vs={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},ks=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>已选值：{{checkbox8}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox8&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;groupData&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {reactive, toRefs} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> state = reactive({\n      <span class="hljs-attr">checkbox8</span>: [<span class="hljs-string">&#39;a1&#39;</span>, <span class="hljs-string">&#39;a6&#39;</span>]\n    })\n    <span class="hljs-keyword">const</span> groupData = [\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项1&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a1&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项2&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a2&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项3&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a3&#39;</span>},\n      {<span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a4&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;禁用&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a5&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;勾选禁用&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a6&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>}\n    ]\n    <span class="hljs-keyword">return</span> {\n      ...toRefs(state),\n      groupData\n\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),ms=g("h3",{id:"可选项目数量的限制","data-source-line":"126"},[g("a",{class:"markdownIt-Anchor",href:"#可选项目数量的限制"},"#"),v(" 可选项目数量的限制")],-1),bs=g("p",{"data-source-line":"128"},[v("例子最多可选"),g("code",null,"max=4"),v("，最少需选"),g("code",null,"min=2")],-1),xs=g("pre",{style:{display:"none"}},null,-1),_s={class:"vuedoc-demo "},fs={class:"vuedoc-demo__inner"},ys={class:"vuedoc-demo__preview"},ws={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},qs=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>已选值：{{checkbox9}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox9&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;groupData&quot;</span> <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {reactive, toRefs} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> state = reactive({\n      <span class="hljs-attr">checkbox9</span>: [<span class="hljs-string">&#39;a5&#39;</span>]\n    })\n    <span class="hljs-keyword">const</span> groupData = [\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项1&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a1&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项2&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a2&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项3&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a3&#39;</span>},\n      {<span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a4&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;禁用&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a5&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;勾选禁用&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a6&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>}\n    ]\n    <span class="hljs-keyword">return</span> {\n      ...toRefs(state),\n      groupData\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),Vs=g("h3",{id:"组全选或全不选方法","data-source-line":"164"},[g("a",{class:"markdownIt-Anchor",href:"#组全选或全不选方法"},"#"),v(" 组全选或全不选方法")],-1),Cs=g("p",{"data-source-line":"166"},[g("code",null,"toggleSelect(true/false)全选或取消全选"),v("，可使用 "),g("code",null,"getValue"),v(" 取方法取得已勾选的项集合")],-1),Rs=g("pre",{style:{display:"none"}},null,-1),Hs={class:"vuedoc-demo "},Ds={class:"vuedoc-demo__inner"},As={class:"vuedoc-demo__preview"},Is={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},Gs=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>已选值：{{ checkbox11 }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox-group</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;checkGroup&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox11&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;groupData&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$refs.checkGroup.toggleSelect(true)&quot;</span>&gt;</span>全选<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$refs.checkGroup.toggleSelect(false)&quot;</span>&gt;</span>全不选<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;getValue&quot;</span>&gt;</span>获取值<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {reactive, toRefs, ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> state = reactive({\n      <span class="hljs-attr">checkbox11</span>: [<span class="hljs-string">&#39;a1&#39;</span>]\n    })\n    <span class="hljs-keyword">const</span> groupData = [\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项1&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a1&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项2&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a2&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项3&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a3&#39;</span>},\n      {<span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a4&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;禁用&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a5&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;勾选禁用&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a6&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>}\n    ]\n    <span class="hljs-keyword">const</span> checkGroup=ref()\n    <span class="hljs-keyword">const</span> getValue=<span class="hljs-function">()=&gt;</span>{\n      <span class="hljs-keyword">const</span> value=checkGroup.value.getValue()\n      <span class="hljs-built_in">console</span>.log(value)\n    }\n    <span class="hljs-keyword">return</span> {\n      ...toRefs(state),\n      groupData,\n      checkGroup,\n      getValue\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),Us=g("h3",{id:"多个单一组成的组","data-source-line":"214"},[g("a",{class:"markdownIt-Anchor",href:"#多个单一组成的组"},"#"),v(" 多个单一组成的组")],-1),Os=g("p",{"data-source-line":"216"},[v("组group有一定的局限性，组内的"),g("code",null,"checkbox"),v("是紧密相连的。由多个单一"),g("code",null,"checkbox"),v("自由组成可实现灵活布局。同时也很方便的实现全选或全不选")],-1),Ss=g("pre",{style:{display:"none"}},null,-1),Ps={class:"vuedoc-demo "},Es={class:"vuedoc-demo__inner"},$s={class:"vuedoc-demo__preview"},Bs={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},Fs=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当前选中值：{{checkbox10}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox10&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;a1&quot;</span>&gt;</span>选项1<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox10&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;a2&quot;</span>&gt;</span>选项2<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox10&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;a3&quot;</span>&gt;</span>选项3<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox10&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;a4&quot;</span>&gt;</span>选项4<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checkbox10=[&#39;a1&#39;,&#39;a2&#39;,&#39;a3&#39;,&#39;a4&#39;]&quot;</span>&gt;</span>全选<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checkbox10=[]&quot;</span>&gt;</span>全不选<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {reactive, toRefs} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> state = reactive({\n      <span class="hljs-attr">checkbox10</span>: [<span class="hljs-string">&#39;a1&#39;</span>]\n    })\n    <span class="hljs-keyword">return</span> {\n      ...toRefs(state)\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Ms=g("h3",{id:"阻止改变事件","data-source-line":"255"},[g("a",{class:"markdownIt-Anchor",href:"#阻止改变事件"},"#"),v(" 阻止改变事件")],-1),zs=g("p",{"data-source-line":"257"},[v("使用"),g("code",null,"beforeChange"),v("可阻止事件改变")],-1),Js=g("pre",{style:{display:"none"}},null,-1),Ks={class:"vuedoc-demo "},Ls={class:"vuedoc-demo__inner"},Ns={class:"vuedoc-demo__preview"},Qs={ref:"vdpv_6Ref",class:"vuedoc-demo__sourceref"},Ts=_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;a1&quot;</span> <span class="hljs-attr">:beforeChange</span>=<span class="hljs-string">&quot;beforeChange&quot;</span>&gt;</span>选项1<span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checkbox2&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;groupData&quot;</span> <span class="hljs-attr">:beforeChange</span>=<span class="hljs-string">&quot;beforeChange&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-checkbox-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {reactive, toRefs} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> state = reactive({\n      <span class="hljs-attr">checkbox</span>: <span class="hljs-string">&#39;&#39;</span>,\n      <span class="hljs-attr">checkbox2</span>: [<span class="hljs-string">&#39;a1&#39;</span>],\n    })\n    <span class="hljs-keyword">const</span> groupData = [\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项1&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a1&#39;</span>},\n      {<span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项2&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a2&#39;</span>}\n    ]\n    <span class="hljs-keyword">const</span> beforeChange = <span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;return false 阻止勾选&#39;</span>)\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>\n    }\n    <span class="hljs-keyword">return</span> {\n      ...toRefs(state),\n      groupData,\n      beforeChange\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Ws=_('<h2 id="api" data-source-line="296"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="checkbox" data-source-line="298"><a class="markdownIt-Anchor" href="#checkbox">#</a> Checkbox</h3><table data-source-line="300"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-model</td><td>String, Boolean, Array</td><td>选中值</td></tr><tr><td>label</td><td>String</td><td>显示的文本值，也可以是slot形式</td></tr><tr><td>disabled</td><td>Boolean/false</td><td>禁用</td></tr><tr><td>beforeChange</td><td>Function</td><td>点击改变前的事件，返回false阻止事件</td></tr></tbody></table><h3 id="checkbox-event" data-source-line="307"><a class="markdownIt-Anchor" href="#checkbox-event">#</a> Checkbox Event</h3><table data-source-line="309"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>change</td><td>改变事件</td></tr></tbody></table><h3 id="checkboxgroup" data-source-line="313"><a class="markdownIt-Anchor" href="#checkboxgroup">#</a> CheckboxGroup</h3><blockquote data-source-line="315"><p>options</p></blockquote><table data-source-line="317"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-model</td><td>Array</td><td>当前选中的值</td></tr><tr><td>options</td><td>Array</td><td>选项数据</td></tr><tr><td>max</td><td>number</td><td>可被勾选的 checkbox 的最大数量</td></tr><tr><td>min</td><td>number</td><td>可被勾选的 checkbox 的最小数量</td></tr><tr><td>disabled</td><td>Boolean/false</td><td>禁用组</td></tr><tr><td>beforeChange</td><td>Function</td><td>点击改变前的事件，返回false阻止事件</td></tr></tbody></table><h3 id="checkboxgroup-methods" data-source-line="326"><a class="markdownIt-Anchor" href="#checkboxgroup-methods">#</a> CheckboxGroup Methods</h3><table data-source-line="328"><thead><tr><th>参数</th><th>类型</th></tr></thead><tbody><tr><td>toggleSelect</td><td>全选true/取消false当前组所有选项</td></tr><tr><td>getValue</td><td>获取当前所有勾选项的集合</td></tr></tbody></table><h3 id="checkboxgroup-event" data-source-line="333"><a class="markdownIt-Anchor" href="#checkboxgroup-event">#</a> CheckboxGroup Event</h3><table data-source-line="335"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>change</td><td>改变事件</td></tr></tbody></table>',12);Q.render=function(s,a,n,l,e,t){const p=d("vdpv_0"),c=d("vdpv_1"),o=d("vdpv_2"),h=d("vdpv_3"),r=d("vdpv_4"),i=d("vdpv_5"),v=d("vdpv_6");return u(),j("div",T,[W,g("div",X,[g("div",Y,[g("div",Z,[g(p)]),g("div",{style:{height:s.vdpv_0Height+"px"},class:"vuedoc-demo__source"},[g("div",ss,[as],512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},k(s.vdpv_0Height>0?"hidden":"show"),1)])]),ns,ls,es,g("div",ts,[g("div",ps,[g("div",cs,[g(c)]),g("div",{style:{height:s.vdpv_1Height+"px"},class:"vuedoc-demo__source"},[g("div",os,[hs],512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},k(s.vdpv_1Height>0?"hidden":"show"),1)])]),rs,ds,us,g("div",js,[g("div",gs,[g("div",is,[g(o)]),g("div",{style:{height:s.vdpv_2Height+"px"},class:"vuedoc-demo__source"},[g("div",vs,[ks],512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},k(s.vdpv_2Height>0?"hidden":"show"),1)])]),ms,bs,xs,g("div",_s,[g("div",fs,[g("div",ys,[g(h)]),g("div",{style:{height:s.vdpv_3Height+"px"},class:"vuedoc-demo__source"},[g("div",ws,[qs],512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(3))},k(s.vdpv_3Height>0?"hidden":"show"),1)])]),Vs,Cs,Rs,g("div",Hs,[g("div",Ds,[g("div",As,[g(r)]),g("div",{style:{height:s.vdpv_4Height+"px"},class:"vuedoc-demo__source"},[g("div",Is,[Gs],512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(4))},k(s.vdpv_4Height>0?"hidden":"show"),1)])]),Us,Os,Ss,g("div",Ps,[g("div",Es,[g("div",$s,[g(i)]),g("div",{style:{height:s.vdpv_5Height+"px"},class:"vuedoc-demo__source"},[g("div",Bs,[Fs],512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[6]||(a[6]=a=>s.toggleCode(5))},k(s.vdpv_5Height>0?"hidden":"show"),1)])]),Ms,zs,Js,g("div",Ks,[g("div",Ls,[g("div",Ns,[g(v)]),g("div",{style:{height:s.vdpv_6Height+"px"},class:"vuedoc-demo__source"},[g("div",Qs,[Ts],512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[7]||(a[7]=a=>s.toggleCode(6))},k(s.vdpv_6Height>0?"hidden":"show"),1)])]),Ws])};export default Q;
